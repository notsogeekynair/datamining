df <- read.csv('project_data.csv')
df.head
df.head()
head(df)
df.shape
dim(df)
str(df)
colSums(is.na(df))
missing_percentage <- colMeans(is.na(df)) * 100
missing_percentage
columns_to_remove <- names(missing_percentage[missing_percentage > 70])
columns_to_remove
df[, !names(df) %in% columns_to_remove]
dim(df)
df <- df[, !names(df) %in% columns_to_remove]
dim(df)
colSums(is.na(df))
# Load necessary libraries
library(ggplot2)
library(tidyr)  # For reshaping data
columns_with_na <- colnames(df)[colSums(is.na(df)) > 0]
# Step 2: Reshape the data for plotting (convert to long format)
df_long <- pivot_longer(df, all_of(columns_with_na), names_to = "variable", values_to = "value")
# Step 3: Plot the distribution of each column with missing values
ggplot(df_long, aes(x = value, fill = variable)) +
geom_histogram(binwidth = 1, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Distribution of Columns with Missing Values",
x = "Value",
y = "Count") +
theme_minimal()
# Step 3: Plot the distribution of each column with missing values
ggplot(df_long, aes(x = value, fill = variable)) +
geom_histogram(binwidth = 10, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Distribution of Columns with Missing Values",
x = "Value",
y = "Count") +
theme_minimal()
# Step 3: Plot the distribution of each column with missing values
ggplot(df_long, aes(x = value, fill = variable)) +
geom_histogram(binwidth = 5, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Distribution of Columns with Missing Values",
x = "Value",
y = "Count") +
theme_minimal()
# Step 3: Plot the distribution of each column with missing values
ggplot(df_long, aes(x = value, fill = variable)) +
geom_histogram(binwidth = 1, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Distribution of Columns with Missing Values",
x = "Value",
y = "Count") +
theme_minimal()
df['MIL']
df['POVPIP']
df <- read.csv('project_data.csv')
head(df)
dim(df)
str(df)
colSums(is.na(df))
missing_percentage <- colMeans(is.na(df)) * 100
missing_percentage
missing_percentage <- colMeans(is.na(df)) * 100
missing_percentage
columns_to_remove <- names(missing_percentage[missing_percentage > 80])
columns_to_remove
df <- df[, !names(df) %in% columns_to_remove]
dim(df)
columns_to_remove <- names(missing_percentage[missing_percentage > 70])
columns_to_remove
df <- df[, !names(df) %in% columns_to_remove]
dim(df)
colSums(is.na(df))
missing_percentage <- colMeans(is.na(df)) * 100
missing_percentage
columns_to_remove <- names(missing_percentage[missing_percentage > 80])
columns_to_remove
df <- df[, !names(df) %in% columns_to_remove]
dim(df)
colSums(is.na(df))
# Load necessary libraries
library(ggplot2)
library(tidyr)  # For reshaping data
columns_with_na <- colnames(df)[colSums(is.na(df)) > 0]
# Step 2: Reshape the data for plotting (convert to long format)
df_long <- pivot_longer(df, all_of(columns_with_na), names_to = "variable", values_to = "value")
# Step 3: Plot the distribution of each column with missing values
ggplot(df_long, aes(x = value, fill = variable)) +
geom_histogram(binwidth = 1, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Distribution of Columns with Missing Values",
x = "Value",
y = "Count") +
theme_minimal()
df <- read.csv('project_data.csv')
dim(df)
head(df)
# convert class to factor
df$Class <- as.factor(df$Class)
sapply(df, Class)
df$Class <- as.factor(df$Class)
sapply(df, class)
df <- read.csv('project_data.csv')
dim(df)
head(df)
# convert class to factor
df$Class <- as.factor(df$Class)
sapply(df, class)
int_to_char <- c("DIVISION", "PUMA", "REGION", "REGION",
"STATE", "ADJINC", "CIT", "COW", "ENG",
"FER", "GCL", "GCM", "GCR", "HIMRKS",
"HINS1", "HINS2", "HINS3", "HINS4",
"HINS5", "HINS6", "HINS7", "JWTRNS",
"LANX", "MAR", "MARHD", "MARHM", "MARHT",
"MARHW", "MIG", "MIL", "MLPA", "MLPB", "MLPCD",
"MLPE", "MLPFG", "MLPH", "MLPIK", "MLPJ", "NWAB",
"NWAV", "NWLA", "NWLK", "NWRE", "SCH", "SCHG",
"SCHL", "SEX", "WRK", "ANC", "ANC1P", "ANC2P",
"DECADE", "DRIVESP", "ESP", "ESR", "FOD1P", "FOD2P",
"HICOV", "HISP", "INDP", "JWAP", "JWDP", "LANP", "MIGPUMA",
"MIGSP", "MSP", "NATIVITY", "NOP", "OC", "OCCP", "PAOC",
"POBP", "POWPUMA", "POWSP", "PRIVCOV", "PUBCOV", "QTRBIR",
"RAC1P", "RAC2P", "RAC3P", "RACAIAN", "RACASN", "RACBLK",
"RACNH", "RACNUM", "RACPI", "RACSOR", "RACWHT", "RC", "SCIENGP",
"SCIENGRLP", "SFN", "SFR", "VPS", "WAOB")
df[cols_to_convert] <- lapply(df[int_to_char], as.character)
int_to_char <- c("DIVISION", "PUMA", "REGION", "REGION",
"STATE", "ADJINC", "CIT", "COW", "ENG",
"FER", "GCL", "GCM", "GCR", "HIMRKS",
"HINS1", "HINS2", "HINS3", "HINS4",
"HINS5", "HINS6", "HINS7", "JWTRNS",
"LANX", "MAR", "MARHD", "MARHM", "MARHT",
"MARHW", "MIG", "MIL", "MLPA", "MLPB", "MLPCD",
"MLPE", "MLPFG", "MLPH", "MLPIK", "MLPJ", "NWAB",
"NWAV", "NWLA", "NWLK", "NWRE", "SCH", "SCHG",
"SCHL", "SEX", "WRK", "ANC", "ANC1P", "ANC2P",
"DECADE", "DRIVESP", "ESP", "ESR", "FOD1P", "FOD2P",
"HICOV", "HISP", "INDP", "JWAP", "JWDP", "LANP", "MIGPUMA",
"MIGSP", "MSP", "NATIVITY", "NOP", "OC", "OCCP", "PAOC",
"POBP", "POWPUMA", "POWSP", "PRIVCOV", "PUBCOV", "QTRBIR",
"RAC1P", "RAC2P", "RAC3P", "RACAIAN", "RACASN", "RACBLK",
"RACNH", "RACNUM", "RACPI", "RACSOR", "RACWHT", "RC", "SCIENGP",
"SCIENGRLP", "SFN", "SFR", "VPS", "WAOB")
df[int_to_char] <- lapply(df[int_to_char], as.character)
int_to_char <- c("DIVISION", "PUMA", "REGION",
"STATE", "ADJINC", "CIT", "COW", "ENG",
"FER", "GCL", "GCM", "GCR", "HIMRKS",
"HINS1", "HINS2", "HINS3", "HINS4",
"HINS5", "HINS6", "HINS7", "JWTRNS",
"LANX", "MAR", "MARHD", "MARHM", "MARHT",
"MARHW", "MIG", "MIL", "MLPA", "MLPB", "MLPCD",
"MLPE", "MLPFG", "MLPH", "MLPIK", "MLPJ", "NWAB",
"NWAV", "NWLA", "NWLK", "NWRE", "SCH", "SCHG",
"SCHL", "SEX", "WRK", "ANC", "ANC1P", "ANC2P",
"DECADE", "DRIVESP", "ESP", "ESR", "FOD1P", "FOD2P",
"HICOV", "HISP", "INDP", "JWAP", "JWDP", "LANP", "MIGPUMA",
"MIGSP", "MSP", "NATIVITY", "NOP", "OC", "OCCP", "PAOC",
"POBP", "POWPUMA", "POWSP", "PRIVCOV", "PUBCOV", "QTRBIR",
"RAC1P", "RAC2P", "RAC3P", "RACAIAN", "RACASN", "RACBLK",
"RACNH", "RACNUM", "RACPI", "RACSOR", "RACWHT", "RC", "SCIENGP",
"SCIENGRLP", "SFN", "SFR", "VPS", "WAOB")
df[int_to_char] <- lapply(df[int_to_char], as.character)
sapply(df, class)
str(df)
sapply(df, function(x) sum(is.na(x)))
sum(is.na(df))
df <- read.csv('project_data.csv')
dim(df)
head(df)
# convert class to factor
df$Class <- as.factor(df$Class)
sapply(df, class)
int_to_char <- c("DIVISION", "PUMA", "REGION",
"STATE", "ADJINC", "CIT", "COW", "ENG",
"FER", "GCL", "GCM", "GCR", "HIMRKS",
"HINS1", "HINS2", "HINS3", "HINS4",
"HINS5", "HINS6", "HINS7", "JWTRNS",
"LANX", "MAR", "MARHD", "MARHM", "MARHT",
"MARHW", "MIG", "MIL", "MLPA", "MLPB", "MLPCD",
"MLPE", "MLPFG", "MLPH", "MLPIK", "MLPJ", "NWAB",
"NWAV", "NWLA", "NWLK", "NWRE", "SCH", "SCHG",
"SCHL", "SEX", "WRK", "ANC", "ANC1P", "ANC2P",
"DECADE", "DRIVESP", "ESP", "ESR", "FOD1P", "FOD2P",
"HICOV", "HISP", "INDP", "JWAP", "JWDP", "LANP", "MIGPUMA",
"MIGSP", "MSP", "NATIVITY", "NOP", "OC", "OCCP", "PAOC",
"POBP", "POWPUMA", "POWSP", "PRIVCOV", "PUBCOV", "QTRBIR",
"RAC1P", "RAC2P", "RAC3P", "RACAIAN", "RACASN", "RACBLK",
"RACNH", "RACNUM", "RACPI", "RACSOR", "RACWHT", "RC", "SCIENGP",
"SCIENGRLP", "SFN", "SFR", "VPS", "WAOB")
df[int_to_char] <- lapply(df[int_to_char], as.character)
sapply(df, class)
sum(is.na(df))
sapply(df, function(x) sum(is.na(x)))
missing_percentage <- colMeans(is.na(df)) * 100
missing_percentage
columns_to_remove <- names(missing_percentage[missing_percentage > 80])
columns_to_remove
df <- df[, !names(df) %in% columns_to_remove]
dim(df)
sum(is.na(df))
df <- read.csv('project_data.csv')
dim(df)
head(df)
# convert class to factor
df$Class <- as.factor(df$Class)
sapply(df, class)
int_to_char <- c("DIVISION", "PUMA", "REGION",
"STATE", "ADJINC", "CIT", "COW", "ENG",
"FER", "GCL", "GCM", "GCR", "HIMRKS",
"HINS1", "HINS2", "HINS3", "HINS4",
"HINS5", "HINS6", "HINS7", "JWTRNS",
"LANX", "MAR", "MARHD", "MARHM", "MARHT",
"MARHW", "MIG", "MIL", "MLPA", "MLPB", "MLPCD",
"MLPE", "MLPFG", "MLPH", "MLPIK", "MLPJ", "NWAB",
"NWAV", "NWLA", "NWLK", "NWRE", "SCH", "SCHG",
"SCHL", "SEX", "WRK", "ANC", "ANC1P", "ANC2P",
"DECADE", "DRIVESP", "ESP", "ESR", "FOD1P", "FOD2P",
"HICOV", "HISP", "INDP", "JWAP", "JWDP", "LANP", "MIGPUMA",
"MIGSP", "MSP", "NATIVITY", "NOP", "OC", "OCCP", "PAOC",
"POBP", "POWPUMA", "POWSP", "PRIVCOV", "PUBCOV", "QTRBIR",
"RAC1P", "RAC2P", "RAC3P", "RACAIAN", "RACASN", "RACBLK",
"RACNH", "RACNUM", "RACPI", "RACSOR", "RACWHT", "RC", "SCIENGP",
"SCIENGRLP", "SFN", "SFR", "VPS", "WAOB")
df[int_to_char] <- lapply(df[int_to_char], as.character)
sapply(df, class)
sapply(df, function(x) sum(is.na(x)))
missing_percentage <- colMeans(is.na(df)) * 100
missing_percentage
columns_to_remove <- names(missing_percentage[missing_percentage > 80])
columns_to_remove
df <- df[, !names(df) %in% columns_to_remove]
dim(df)
sapply(df, function(x) sum(is.na(x)))
library(dplyr)
# Function to calculate mode (most frequent value)
get_mode <- function(x) {
ux <- unique(x[!is.na(x)])  # Unique non-NA values
ux[which.max(tabulate(match(x, ux)))]  # Find most frequent value
}
df <- df %>%
group_by(Class) %>%
mutate(across(where(is.character),
~ replace(., is.na(.), get_mode(.)))) %>%
ungroup()
sapply(df, function(x) sum(is.na(x)))
dim(df)
# Load necessary libraries
library(ggplot2)
library(tidyr)  # For reshaping data
columns_with_na <- colnames(df)[colSums(is.na(df)) > 0]
# Step 2: Reshape the data for plotting (convert to long format)
df_long <- pivot_longer(df, all_of(columns_with_na), names_to = "variable", values_to = "value")
# Step 3: Plot the distribution of each column with missing values
ggplot(df_long, aes(x = value, fill = variable)) +
geom_histogram(binwidth = 1, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Distribution of Columns with Missing Values",
x = "Value",
y = "Count") +
theme_minimal()
df <- df %>%
mutate(across(where(is.integer), as.numeric))
sapply(df, class)
df_no_missing <- df_no_missing %>%
group_by(Class) %>%
mutate(across(where(is.numeric), ~ replace(., is.na(.), mean(., na.rm = TRUE)))) %>%
ungroup()
df <- df %>%
group_by(Class) %>%
mutate(across(where(is.numeric), ~ replace(., is.na(.), mean(., na.rm = TRUE)))) %>%
ungroup()
# Check if any missing values remain
sapply(df, function(x) sum(is.na(x)))
# Check data types of each column
sapply(df, class)
# Check dataset dimensions
dim(df)
sapply(df, function(x) sum(is.na(x)))
sum(is.na(temp))
sum(is.na(df))
df <- read.csv('project_data.csv')
dim(df)
head(df)
# convert class to factor
df$Class <- as.factor(df$Class)
sapply(df, class)
int_to_char <- c("DIVISION", "PUMA", "REGION",
"STATE", "ADJINC", "CIT", "COW", "ENG",
"FER", "GCL", "GCM", "GCR", "HIMRKS",
"HINS1", "HINS2", "HINS3", "HINS4",
"HINS5", "HINS6", "HINS7", "JWTRNS",
"LANX", "MAR", "MARHD", "MARHM", "MARHT",
"MARHW", "MIG", "MIL", "MLPA", "MLPB", "MLPCD",
"MLPE", "MLPFG", "MLPH", "MLPIK", "MLPJ", "NWAB",
"NWAV", "NWLA", "NWLK", "NWRE", "SCH", "SCHG",
"SCHL", "SEX", "WRK", "ANC", "ANC1P", "ANC2P",
"DECADE", "DRIVESP", "ESP", "ESR", "FOD1P", "FOD2P",
"HICOV", "HISP", "INDP", "JWAP", "JWDP", "LANP", "MIGPUMA",
"MIGSP", "MSP", "NATIVITY", "NOP", "OC", "OCCP", "PAOC",
"POBP", "POWPUMA", "POWSP", "PRIVCOV", "PUBCOV", "QTRBIR",
"RAC1P", "RAC2P", "RAC3P", "RACAIAN", "RACASN", "RACBLK",
"RACNH", "RACNUM", "RACPI", "RACSOR", "RACWHT", "RC", "SCIENGP",
"SCIENGRLP", "SFN", "SFR", "VPS", "WAOB")
df[int_to_char] <- lapply(df[int_to_char], as.character)
sapply(df, class)
sapply(df, function(x) sum(is.na(x)))
missing_percentage <- colMeans(is.na(df)) * 100
missing_percentage
columns_to_remove <- names(missing_percentage[missing_percentage > 80])
columns_to_remove
df <- df[, !names(df) %in% columns_to_remove]
dim(df)
sapply(df, function(x) sum(is.na(x)))
library(dplyr)
# Function to calculate mode (most frequent value)
get_mode <- function(x) {
ux <- unique(x[!is.na(x)])  # Unique non-NA values
ux[which.max(tabulate(match(x, ux)))]  # Find most frequent value
}
df <- df %>%
group_by(Class) %>%
mutate(across(where(is.character),
~ replace(., is.na(.), get_mode(.)))) %>%
ungroup()
sapply(df, function(x) sum(is.na(x)))
dim(df)
df <- df %>%
mutate(across(where(is.integer), as.numeric))
sapply(df, class)
df <- df %>%
group_by(Class) %>%
mutate(across(where(is.numeric),
~ replace(., is.na(.), median(., na.rm = TRUE)))) %>%
ungroup()
# Check if any missing values remain
sum(is.na(df))
df <- read.csv('project_data.csv')
dim(df)
head(df)
# convert class to factor
df$Class <- as.factor(df$Class)
sapply(df, class)
int_to_char <- c("DIVISION", "PUMA", "REGION",
"STATE", "ADJINC", "CIT", "COW", "ENG",
"FER", "GCL", "GCM", "GCR", "HIMRKS",
"HINS1", "HINS2", "HINS3", "HINS4",
"HINS5", "HINS6", "HINS7", "JWTRNS",
"LANX", "MAR", "MARHD", "MARHM", "MARHT",
"MARHW", "MIG", "MIL", "MLPA", "MLPB", "MLPCD",
"MLPE", "MLPFG", "MLPH", "MLPIK", "MLPJ", "NWAB",
"NWAV", "NWLA", "NWLK", "NWRE", "SCH", "SCHG",
"SCHL", "SEX", "WRK", "ANC", "ANC1P", "ANC2P",
"DECADE", "DRIVESP", "ESP", "ESR", "FOD1P", "FOD2P",
"HICOV", "HISP", "INDP", "JWAP", "JWDP", "LANP", "MIGPUMA",
"MIGSP", "MSP", "NATIVITY", "NOP", "OC", "OCCP", "PAOC",
"POBP", "POWPUMA", "POWSP", "PRIVCOV", "PUBCOV", "QTRBIR",
"RAC1P", "RAC2P", "RAC3P", "RACAIAN", "RACASN", "RACBLK",
"RACNH", "RACNUM", "RACPI", "RACSOR", "RACWHT", "RC", "SCIENGP",
"SCIENGRLP", "SFN", "SFR", "VPS", "WAOB")
df[int_to_char] <- lapply(df[int_to_char], as.character)
sapply(df, class)
sapply(df, function(x) sum(is.na(x)))
missing_percentage <- colMeans(is.na(df)) * 100
missing_percentage
columns_to_remove <- names(missing_percentage[missing_percentage > 80])
columns_to_remove
df <- df[, !names(df) %in% columns_to_remove]
dim(df)
sapply(df, function(x) sum(is.na(x)))
library(dplyr)
# Function to calculate mode (most frequent value)
get_mode <- function(x) {
ux <- unique(x[!is.na(x)])  # Unique non-NA values
ux[which.max(tabulate(match(x, ux)))]  # Find most frequent value
}
df <- df %>%
group_by(Class) %>%
mutate(across(where(is.character),
~ replace(., is.na(.), get_mode(.)))) %>%
ungroup()
sapply(df, function(x) sum(is.na(x)))
# Load necessary libraries
library(ggplot2)
library(tidyr)  # For reshaping data
columns_with_na <- colnames(df)[colSums(is.na(df)) > 0]
# Step 2: Reshape the data for plotting (convert to long format)
df_long <- pivot_longer(df, all_of(columns_with_na), names_to = "variable", values_to = "value")
# Step 3: Plot the distribution of each column with missing values
ggplot(df_long, aes(x = value, fill = variable)) +
geom_histogram(binwidth = 1, alpha = 0.6, color = "black") +
facet_wrap(~ variable, scales = "free") +
labs(title = "Distribution of Columns with Missing Values",
x = "Value",
y = "Count") +
theme_minimal()
df <- df %>%
mutate(across(where(is.integer), as.numeric))
sapply(df, class)
df <- df %>%
group_by(Class) %>%
mutate(across(where(is.numeric),
~ replace(., is.na(.), median(., na.rm = TRUE)))) %>%
ungroup()
# Check if any missing values remain
sum(is.na(df))
